apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'project-report'

ext {
    // SpringSource Projects
    springFrameworkVersion = '3.2.2.RELEASE'
    springIntegrationVersion = '2.2.3.RELEASE'
    springSecurityVersion = '3.1.3.RELEASE'
    springMobileVersion = '1.0.1.RELEASE'
    springDataJpaVersion = '1.3.0.RELEASE'
    springDataJdbcExtensionsVersion = '1.0.0.RELEASE'
    springDataApacheHadoopVersion = '1.0.0.RELEASE'
    springDataGemFireVersion = '1.3.0.RELEASE'
    springDataRestMvcVersion = '1.1.0.M1'
    springDataRedisVersion = '1.0.2.RELEASE'
    springDataMongoDbVersion = '1.0.3.RELEASE'
    springDataNeo4jVersion = '2.0.1.RELEASE'
    springWebServicesVersion = '2.1.2.RELEASE'
    springBatchVersion = '2.1.9.RELEASE'
    springAmqpVersion = '1.1.4.RELEASE'
    springSocialVersion = '1.0.2.RELEASE'
    springWebFlowVersion = '2.3.1.RELEASE'
    springFlexVersion = '1.5.2.RELEASE'
    sprinHateoasVersion = '0.4.0.RELEASE'

    // Runtime Dependencies
    cglibVersion = '2.2.2'
    slf4jVersion = '1.7.2'
    logbackVersion = '1.0.7'
    jacksonVersion = '1.9.10'
    hibernateVersion = '4.1.10.Final'

    // Testing Dependencies
    junitVersion = '4.10'
    hamcrestVersion =  '1.3'

    // Groovy Runtime
    groovyVersion = '2.1.0'
}

defaultTasks 'clean', 'collectJars', 'projectReport', 'build'

repositories {
    mavenCentral()
    maven {
        url "http://repo.springsource.org/libs-release"
    }
    maven {
        url "http://repo.springsource.org/libs-milestone"
    }
    maven {
        url "http://repo.springsource.org/libs-snapshot"
    }
}

configurations {
    all*.exclude group: 'commons-logging'
    all*.exclude module: 'log4j'

    sourceArchives {
        description = 'Artifact that contains the source code of the dependencies.'
    }
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}:indy"

    compile "org.springframework.data:spring-data-rest-webmvc:${springDataRestMvcVersion}"

    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.slf4j:slf4j-ext:${slf4jVersion}"

    testCompile "org.springframework:spring-test:${springFrameworkVersion}"
    testCompile "junit:junit-dep:${junitVersion}"
    testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"

    runtime "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    runtime "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    runtime "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
    runtime "ch.qos.logback:logback-classic:${logbackVersion}"
    runtime "ch.qos.logback:logback-core:${logbackVersion}"

    sourceArchives "org.codehaus.groovy:groovy-all:${groovyVersion}:sources"
    sourceArchives "org.springframework.data:spring-data-rest-webmvc:${springDataRestMvcVersion}:sources"
    sourceArchives "org.slf4j:slf4j-api:${slf4jVersion}:sources"
    sourceArchives "org.slf4j:slf4j-ext:${slf4jVersion}:sources"
    sourceArchives "org.springframework:spring-test:${springFrameworkVersion}:sources"
    sourceArchives "junit:junit-dep:${junitVersion}:sources"
    sourceArchives "org.slf4j:jcl-over-slf4j:${slf4jVersion}:sources"
    sourceArchives "org.slf4j:jul-to-slf4j:${slf4jVersion}:sources"
    sourceArchives "org.slf4j:log4j-over-slf4j:${slf4jVersion}:sources"
    sourceArchives "ch.qos.logback:logback-classic:${logbackVersion}:sources"
    sourceArchives "ch.qos.logback:logback-core:${logbackVersion}:sources"
    sourceArchives "org.hamcrest:hamcrest-all:${hamcrestVersion}:sources"
}

task generateWrapper(type: Wrapper) {
    gradleVersion = '1.5'
}

task collectJars(type: Copy) {
    into "$rootDir/build/dependencies"
    from( [configurations.testRuntime,configurations.sourceArchives] )
}
